@page
@model AutoArsenal_App.Pages.Sales.SalesModel
@{
    ViewData["Title"] = "Sales";
}

<div class="pagetitle">
    <h1>@ViewData["Title"]</h1>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active" aria-current="page">
                <a asp-page="../Index">Home</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </nav>
</div>
<!-- Error message -->
@if (TempData["ErrorOnServer"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        Error: @TempData["ErrorOnServer"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<!-- End Error message -->
<!-- Search Card -->
<div class="card">
    <div class="card-body">
        <div id="panelSearch" class="d-flex justify-content-between align-items-center">
            <a asp-page="/Sales/AddSale" class="btn btn-primary" style="margin:10px;">Add Sale</a>
            <form class="form-inline flex-grow-1 mr-2" id="searchBar">
                <input class="form-control w-100" type="search" placeholder="Search" aria-label="Search" />
            </form>
            <div class="searchBarButton" style="margin:10px;">
                <div class="form-floating mt-2">
                    <input type="date" class="form-control" name="salesSearchDate" id="salesSearchDate" onchange="dateChange()" style="height:auto;" />
                    <label for="salesSearchDate">Filter by Date</label>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Search Card -->
<!-- Table -->
<div class="card">
    <div class="card-body">
        <h5 class="card-title">Sales</h5>
        <div class="table-responsive">
            <table id="salesTable" class="table table-hover table-striped table-bordered text-center">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Sale ID</th>
                        <th scope="col">Employee</th>
                        <th scope="col">Customer</th>
                        <th scope="col">Date</th>
                        <th scope="col">Paid</th>
                        <th scope="col">Payment ID</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">
                    @if (Model.Sales != null && Model.Persons != null)
                    {
                        int count = 1;
                        foreach (Models.Sale sale in Model.Sales)
                        {
                            if (!sale.IsDeleted)
                            {
                                Models.Person employee = Model.Persons.Find(p => p.ID == sale.EmployeeID);
                                Models.Person customer = Model.Persons.Find(p => p.ID == sale.CustomerID);
                                <tr>
                                    <td>@count</td>
                                    <td>@sale.ID</td>
                                    <td>@(employee.FirstName + " " + employee.LastName)</td>
                                    <td>@(customer.FirstName + " " + customer.LastName)</td>
                                    <td>@sale.DateOfSale.ToString("yyyy-MM-dd hh:mm:ss")</td>
                                    <td>@Model.remainings[count - 1]</td>
                                    <td>@sale.PaymentID</td>
                                    <td>
                                        <a asp-page="/Sales/ViewSale" asp-route-id="@sale.ID" class="btn btn-sm btn-primary"><i class="bi bi-eye"></i></a>
                                        <a class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#addPaymentModal" onclick="addPayment('@sale.PaymentID', '@Model.remainings[count - 1]')"><i class="bi bi-wallet"></i></a>
                                        <a asp-page="/Sales/ReturnSale" asp-route-id="@sale.ID" class="btn btn-sm btn-warning"><i class="bi bi-arrow-counterclockwise"></i></a>
                                    </td>
                                </tr>
                                count++;
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7">No records found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<!-- End Table -->


<!-- Modals ->

<!--Delete Confirmation Modal-->
<div class="modal fade" id="deleteSaleModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="DeleteSale">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel"><i class="bi bi-trash"></i> Delete Sale</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Hidden input to store id for deletion-->
                    <input type="hidden" id="deleteId" asp-for="DeleteId" />
                    <!-- Confirmation Message-->
                    <p>Are you sure you want to delete this Sale?</p>
                    <p>Sale Id: <b id="displayDeleteId"></b></p>
                    <p>Customer: <b id="customerName"></b></p>
                    <p>Employee: <b id="employeeName"></b></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!--End Delete Confirmation Modal-->

<!-- Add Payment -->
<div class="modal fade" id="addPaymentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="AddPayment">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel"><i class="bi bi-plus"></i> Add Payment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row">
                            <!-- Payment Id -->
                            <div class="col-5">
                                <div class="form-floating mt-2">
                                    <input type="text" class="form-control" id="paymentID" placeholder="Payment ID"
                                        asp-for="SaleID" disabled />
                                    <label for="paymentID">Payment Id</label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <!-- Total Amount -->
                            <div class="col-5">
                                <div class="form-floating mt-2">
                                    <input type="text" class="form-control" id="totalAmount" placeholder="Total Amount"
                                        disabled />
                                    <label for="totalAmount">Total Amount</label>
                                </div>
                            </div>
                            <!-- Paid Amount -->
                            <div class="col-5">
                                <div class="form-floating mt-2">
                                    <input type="text" class="form-control" id="paidAmount" placeholder="Paid Amount"
                                        disabled />
                                    <label for="paidAmount">Paid Amount</label>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Pending amount -->
                            <div class="col-5">
                                <div class="form-floating mt-2">
                                    <input type="text" class="form-control" id="pendingAmount"
                                        placeholder="Pending Amount" disabled />
                                    <label for="pendingAmount">Pending Amount</label>
                                </div>
                            </div>
                            <!-- Amount -->
                            <div class="col-5">
                                <div class="form-floating mt-2">
                                    <input type="number" class="form-control" id="amount" placeholder="Enter Amount"
                                        value="0" min="1" oninput="validity.valid||(value='');" />
                                    <label for="amount">Enter Amount</label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Scripts -->
@section Scripts {
    <script>
        $(document).ready(function () {
            var table = $('#salesTable').DataTable({
                paging: true,
                lengthChange: false,
                searching: true,
                ordering: true,
                info: true,
                autoWidth: false,
                language: {
                    emptyTable: "No data available",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries",
                    infoEmpty: "Showing 0 to 0 of 0 entries",
                    infoFiltered: "(filtered from _MAX_ total entries)",
                    zeroRecords: "No matching records found",
                    search: "Search:",
                }
            });

            $('#searchBar input').on('input', function () {
                var searchText = this.value.trim();
                table.search(searchText).draw();
            });
        });

        function dateChange() {
            var date = document.getElementById("salesSearchDate").value;
            var table = $('#salesTable').DataTable();
            table.column(4).search(date).draw();
        }

        function deleteSale(id, customerName, employeeName) {
            document.getElementById("deleteId").value = id;
            document.getElementById("displayDeleteId").textContent = id;
            document.getElementById("customerName").textContent = customerName;
            document.getElementById("employeeName").textContent = employeeName;
        }
    </script>

    <script>
        var payments = @Html.Raw(Json.Serialize(Model.Payments));
        
        // Add Payment
        function addPayment(paymentID, remaining) {
            document.getElementById("paymentID").value = paymentID;
            document.getElementById("paidAmount").value = remaining;
                
            var payment = payments.find(pd => pd.id == paymentID);
            
            if (payment) {
                document.getElementById("totalAmount").value = payment.totalAmount;
                document.getElementById("pendingAmount").value = payment.totalAmount - remaining;
            } else {
                console.error("Payment details not found for payment ID: " + paymentID);
            }
        }
    </script>
}
